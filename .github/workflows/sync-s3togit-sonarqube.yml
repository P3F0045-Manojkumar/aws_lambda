name: Sync s3 Lambda Files & SonarQube Scan

on:
  workflow_dispatch:

jobs: 
  sync-s3-to-github:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: sync a files from s3
        run: |
          aws s3 cp s3://${{ secrets.AWS_S3_BUCKET }}/ ./ --recursive

      - name: Commit and push to GitHub
        run: |
          git config user.name "your-github-username" 
          git config user.email "your-email@example.com"

          git add .
          git diff-index --quiet HEAD || git commit -m "Sync raw Lambda files from S3"
          git pull --rebase origin main
          git push

  sonarqube:
    runs-on: ubuntu-latest
    needs: sync-s3-to-github 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check SonarQube Server Availability
        run: |
          echo "Checking SonarQube server..."
          status_code=$(curl -s -o /dev/null -w "%{http_code}" "${{ secrets.SONAR_URL }}")
          if [ "$status_code" != "200" ]; then
            echo "Server is not reachable (HTTP $status_code)"
            exit 1
          else
            echo "Server is reachable (HTTP $status_code). Proceeding to scan..."
          fi}

      - name: SonarQube Scan
        run: |
          max_attempts=3
          attempt=1
          until [ $attempt -gt $max_attempts ]
          do
            echo "Attempt $attempt of $max_attempts..."
            if npx sonar-scanner \
              -Dsonar.projectKey=Connect_Sharecare_SCCoaching \
              -Dsonar.sources=./ \
              -Dsonar.host.url="${{ secrets.SONAR_URL }}" \
              -Dsonar.token="${{ secrets.SONAR_TOKEN }}" \
              -Dsonar.scanner.connectTimeout=120000 \
              -Dsonar.scanner.readTimeout=120000; then
              echo "Scan successful!"
              break
            fi
            echo "Scan failed. Retrying in 10 seconds..."
            sleep 10
            attempt=$((attempt+1))
          done
          if [ $attempt -gt $max_attempts ]; then
            echo "All attempts failed."
            exit 1
          fi
